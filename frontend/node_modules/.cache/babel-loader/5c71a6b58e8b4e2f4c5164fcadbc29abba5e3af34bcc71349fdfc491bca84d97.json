{"ast":null,"code":"// src/context/AuthContext.js\nimport React,{createContext,useContext,useEffect,useState}from'react';import{supabase}from'../config/supabaseClient';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export function AuthProvider(_ref){let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[session,setSession]=useState(null);useEffect(()=>{console.log(\"AuthProvider mounted\");// Get session on load\nconst getSession=async()=>{console.log('Checking for existing session...');setLoading(true);try{const{data:{session},error}=await supabase.auth.getSession();if(error){console.error('Error getting session:',error);setUser(null);setSession(null);}else if(session){console.log('Active session found:',session.user.email);setSession(session);setUser(session.user);// Salva in localStorage per compatibilità\nlocalStorage.setItem('testUser','true');// Se l'utente è sulla pagina di login, reindirizza\nif(window.location.pathname==='/login'){console.log('Redirecting from login to home (session found)');window.location.href='/';}}else{console.log('No active session');setUser(null);setSession(null);// Se l'utente è già su una pagina protetta, reindirizza al login\nconst isProtectedRoute=window.location.pathname!=='/login'&&window.location.pathname!=='/auth/callback'&&window.location.pathname!=='/reset-password';if(isProtectedRoute){console.log('No session, redirecting to login');window.location.href='/login';}}}catch(e){console.error('Session check error:',e);}finally{setLoading(false);}};getSession();// Listen for auth changes\nconst{data:{subscription}}=supabase.auth.onAuthStateChange((event,session)=>{var _session$user;console.log(\"Auth state change: \".concat(event,\", User: \").concat((session===null||session===void 0?void 0:(_session$user=session.user)===null||_session$user===void 0?void 0:_session$user.email)||'none'));if(event==='SIGNED_IN'){var _session$user2;console.log('User signed in');setSession(session);setUser((_session$user2=session===null||session===void 0?void 0:session.user)!==null&&_session$user2!==void 0?_session$user2:null);// Salva in localStorage per compatibilità\nlocalStorage.setItem('testUser','true');// Reindirizza a home se sulla pagina di login\nif(window.location.pathname==='/login'){console.log('Redirecting from login to home after sign in');setTimeout(()=>window.location.href='/',300);}}else if(event==='SIGNED_OUT'){console.log('User signed out');setUser(null);setSession(null);// Rimuovi da localStorage\nlocalStorage.removeItem('testUser');// Reindirizza a login\nconsole.log('Redirecting to login after sign out');window.location.href='/login';}else if(event==='TOKEN_REFRESHED'){var _session$user3;console.log('Token refreshed');setSession(session);setUser((_session$user3=session===null||session===void 0?void 0:session.user)!==null&&_session$user3!==void 0?_session$user3:null);}setLoading(false);});return()=>{console.log('Cleaning up auth listener');subscription.unsubscribe();};},[]);// Reimplementazione di PrivateRoute direttamente nel contesto\nconst isAuthenticated=()=>{// Controlla sia lo stato user sia localStorage per compatibilità\nreturn!!user||!!localStorage.getItem('testUser');};const value={user,session,loading,isAuthenticated,signIn:async options=>{console.log(\"Attempting to sign in with method: \".concat(options.provider?'OAuth':'Password'));setLoading(true);try{let response;if(options.provider){// Social login with correct redirect URL\nresponse=await supabase.auth.signInWithOAuth({provider:options.provider,options:{redirectTo:\"\".concat(window.location.origin,\"/\")}});}else{// Email password login\nresponse=await supabase.auth.signInWithPassword({email:options.email,password:options.password});}console.log('Sign in response:',response);if(response.error){console.error('Login error:',response.error);setLoading(false);return response;}if(response.data.user){console.log('Sign in successful, user:',response.data.user.email);setUser(response.data.user);setSession(response.data.session);// Salva in localStorage per compatibilità\nlocalStorage.setItem('testUser','true');// Reindirizza dopo un breve delay\nif(window.location.pathname==='/login'){setTimeout(()=>window.location.href='/',500);}}setLoading(false);return response;}catch(err){console.error('Sign in error:',err);setLoading(false);return{error:err};}},signUp:async options=>{console.log(\"Attempting to sign up with email: \".concat(options.email));setLoading(true);try{const response=await supabase.auth.signUp({email:options.email,password:options.password,options:{emailRedirectTo:\"\".concat(window.location.origin,\"/\")}});console.log('Sign up response:',response);if(response.error){console.error('Sign up error:',response.error);setLoading(false);return response;}// Se non richiede conferma email, registra l'utente\nif(response.data.user&&!response.data.session){console.log('Sign up successful, email confirmation required');}else if(response.data.session){console.log('Sign up and auto-login successful');setUser(response.data.user);setSession(response.data.session);// Salva in localStorage per compatibilità\nlocalStorage.setItem('testUser','true');// Reindirizza alla home\nif(window.location.pathname==='/login'){setTimeout(()=>window.location.href='/',500);}}setLoading(false);return response;}catch(err){console.error('Sign up error:',err);setLoading(false);return{error:err};}},signOut:async()=>{console.log('Signing out user');setLoading(true);try{const{error}=await supabase.auth.signOut();if(error){console.error('Error signing out:',error);setLoading(false);throw error;}console.log('Sign out successful');// Pulisci manualmente lo stato e localStorage\nsetUser(null);setSession(null);localStorage.removeItem('testUser');// Forza la navigazione a /login\nwindow.location.href='/login';setLoading(false);return{error:null};}catch(err){console.error('Sign out error:',err);setLoading(false);// Fallback in caso di errore\nlocalStorage.removeItem('testUser');window.location.href='/login';return{error:err};}},resetPassword:async email=>{console.log(\"Attempting password reset for: \".concat(email));try{const{error}=await supabase.auth.resetPasswordForEmail(email,{redirectTo:\"\".concat(window.location.origin,\"/reset-password\")});if(error)throw error;console.log('Password reset email sent');return{error:null};}catch(err){console.error('Password reset error:',err);return{error:err};}},updatePassword:async newPassword=>{console.log('Attempting to update password');try{const{error}=await supabase.auth.updateUser({password:newPassword});if(error)throw error;console.log('Password updated successfully');return{error:null};}catch(err){console.error('Password update error:',err);return{error:err};}},getToken:async()=>{try{var _data$session;const{data,error}=await supabase.auth.getSession();if(error){throw error;}return(_data$session=data.session)===null||_data$session===void 0?void 0:_data$session.access_token;}catch(error){console.error('Error getting token:',error);return null;}},refreshSession:async()=>{try{const{data,error}=await supabase.auth.refreshSession();if(error){console.error('Session refresh error:',error);return{error};}console.log('Session refreshed successfully');setSession(data.session);setUser(data.user);return{data,error:null};}catch(err){console.error('Session refresh error:',err);return{error:err};}}};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});}export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","supabase","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","loading","setLoading","session","setSession","console","log","getSession","data","error","auth","email","localStorage","setItem","window","location","pathname","href","isProtectedRoute","e","subscription","onAuthStateChange","event","_session$user","concat","_session$user2","setTimeout","removeItem","_session$user3","unsubscribe","isAuthenticated","getItem","value","signIn","options","provider","response","signInWithOAuth","redirectTo","origin","signInWithPassword","password","err","signUp","emailRedirectTo","signOut","resetPassword","resetPasswordForEmail","updatePassword","newPassword","updateUser","getToken","_data$session","access_token","refreshSession","Provider","useAuth","context","undefined","Error"],"sources":["/Users/stefano/Desktop/LexygraphLab/frontend/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { supabase } from '../config/supabaseClient';\n\nconst AuthContext = createContext();\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [session, setSession] = useState(null);\n\n  useEffect(() => {\n    console.log(\"AuthProvider mounted\");\n    \n    // Get session on load\n    const getSession = async () => {\n      console.log('Checking for existing session...');\n      setLoading(true);\n      \n      try {\n        const { data: { session }, error } = await supabase.auth.getSession();\n      \n        if (error) {\n          console.error('Error getting session:', error);\n          setUser(null);\n          setSession(null);\n        } else if (session) {\n          console.log('Active session found:', session.user.email);\n          setSession(session);\n          setUser(session.user);\n          \n          // Salva in localStorage per compatibilità\n          localStorage.setItem('testUser', 'true');\n          \n          // Se l'utente è sulla pagina di login, reindirizza\n          if (window.location.pathname === '/login') {\n            console.log('Redirecting from login to home (session found)');\n            window.location.href = '/';\n          }\n        } else {\n          console.log('No active session');\n          setUser(null);\n          setSession(null);\n          \n          // Se l'utente è già su una pagina protetta, reindirizza al login\n          const isProtectedRoute = window.location.pathname !== '/login' && \n                                   window.location.pathname !== '/auth/callback' &&\n                                   window.location.pathname !== '/reset-password';\n          \n          if (isProtectedRoute) {\n            console.log('No session, redirecting to login');\n            window.location.href = '/login';\n          }\n        }\n      } catch (e) {\n        console.error('Session check error:', e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    getSession();\n\n    // Listen for auth changes\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\n      (event, session) => {\n        console.log(`Auth state change: ${event}, User: ${session?.user?.email || 'none'}`);\n        \n        if (event === 'SIGNED_IN') {\n          console.log('User signed in');\n          setSession(session);\n          setUser(session?.user ?? null);\n          \n          // Salva in localStorage per compatibilità\n          localStorage.setItem('testUser', 'true');\n          \n          // Reindirizza a home se sulla pagina di login\n          if (window.location.pathname === '/login') {\n            console.log('Redirecting from login to home after sign in');\n            setTimeout(() => window.location.href = '/', 300);\n          }\n        } \n        else if (event === 'SIGNED_OUT') {\n          console.log('User signed out');\n          setUser(null);\n          setSession(null);\n          \n          // Rimuovi da localStorage\n          localStorage.removeItem('testUser');\n          \n          // Reindirizza a login\n          console.log('Redirecting to login after sign out');\n          window.location.href = '/login';\n        } \n        else if (event === 'TOKEN_REFRESHED') {\n          console.log('Token refreshed');\n          setSession(session);\n          setUser(session?.user ?? null);\n        }\n        \n        setLoading(false);\n      }\n    );\n\n    return () => {\n      console.log('Cleaning up auth listener');\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  // Reimplementazione di PrivateRoute direttamente nel contesto\n  const isAuthenticated = () => {\n    // Controlla sia lo stato user sia localStorage per compatibilità\n    return !!user || !!localStorage.getItem('testUser');\n  };\n\n  const value = {\n    user,\n    session,\n    loading,\n    isAuthenticated,\n    signIn: async (options) => {\n      console.log(`Attempting to sign in with method: ${options.provider ? 'OAuth' : 'Password'}`);\n      setLoading(true);\n      \n      try {\n        let response;\n        \n        if (options.provider) {\n          // Social login with correct redirect URL\n          response = await supabase.auth.signInWithOAuth({\n            provider: options.provider,\n            options: {\n              redirectTo: `${window.location.origin}/`\n            }\n          });\n        } else {\n          // Email password login\n          response = await supabase.auth.signInWithPassword({\n            email: options.email,\n            password: options.password\n          });\n        }\n        \n        console.log('Sign in response:', response);\n        \n        if (response.error) {\n          console.error('Login error:', response.error);\n          setLoading(false);\n          return response;\n        }\n        \n        if (response.data.user) {\n          console.log('Sign in successful, user:', response.data.user.email);\n          setUser(response.data.user);\n          setSession(response.data.session);\n          \n          // Salva in localStorage per compatibilità\n          localStorage.setItem('testUser', 'true');\n          \n          // Reindirizza dopo un breve delay\n          if (window.location.pathname === '/login') {\n            setTimeout(() => window.location.href = '/', 500);\n          }\n        }\n        \n        setLoading(false);\n        return response;\n      } catch (err) {\n        console.error('Sign in error:', err);\n        setLoading(false);\n        return { error: err };\n      }\n    },\n    signUp: async (options) => {\n      console.log(`Attempting to sign up with email: ${options.email}`);\n      setLoading(true);\n      \n      try {\n        const response = await supabase.auth.signUp({\n          email: options.email,\n          password: options.password,\n          options: {\n            emailRedirectTo: `${window.location.origin}/`\n          }\n        });\n        \n        console.log('Sign up response:', response);\n        \n        if (response.error) {\n          console.error('Sign up error:', response.error);\n          setLoading(false);\n          return response;\n        }\n        \n        // Se non richiede conferma email, registra l'utente\n        if (response.data.user && !response.data.session) {\n          console.log('Sign up successful, email confirmation required');\n        } else if (response.data.session) {\n          console.log('Sign up and auto-login successful');\n          setUser(response.data.user);\n          setSession(response.data.session);\n          \n          // Salva in localStorage per compatibilità\n          localStorage.setItem('testUser', 'true');\n          \n          // Reindirizza alla home\n          if (window.location.pathname === '/login') {\n            setTimeout(() => window.location.href = '/', 500);\n          }\n        }\n        \n        setLoading(false);\n        return response;\n      } catch (err) {\n        console.error('Sign up error:', err);\n        setLoading(false);\n        return { error: err };\n      }\n    },\n    signOut: async () => {\n      console.log('Signing out user');\n      setLoading(true);\n      \n      try {\n        const { error } = await supabase.auth.signOut();\n        \n        if (error) {\n          console.error('Error signing out:', error);\n          setLoading(false);\n          throw error;\n        }\n        \n        console.log('Sign out successful');\n        \n        // Pulisci manualmente lo stato e localStorage\n        setUser(null);\n        setSession(null);\n        localStorage.removeItem('testUser');\n        \n        // Forza la navigazione a /login\n        window.location.href = '/login';\n        \n        setLoading(false);\n        return { error: null };\n      } catch (err) {\n        console.error('Sign out error:', err);\n        setLoading(false);\n        \n        // Fallback in caso di errore\n        localStorage.removeItem('testUser');\n        window.location.href = '/login';\n        \n        return { error: err };\n      }\n    },\n    resetPassword: async (email) => {\n      console.log(`Attempting password reset for: ${email}`);\n      \n      try {\n        const { error } = await supabase.auth.resetPasswordForEmail(email, {\n          redirectTo: `${window.location.origin}/reset-password`\n        });\n        \n        if (error) throw error;\n        \n        console.log('Password reset email sent');\n        return { error: null };\n      } catch (err) {\n        console.error('Password reset error:', err);\n        return { error: err };\n      }\n    },\n    updatePassword: async (newPassword) => {\n      console.log('Attempting to update password');\n      \n      try {\n        const { error } = await supabase.auth.updateUser({\n          password: newPassword\n        });\n        \n        if (error) throw error;\n        \n        console.log('Password updated successfully');\n        return { error: null };\n      } catch (err) {\n        console.error('Password update error:', err);\n        return { error: err };\n      }\n    },\n    getToken: async () => {\n      try {\n        const { data, error } = await supabase.auth.getSession();\n        if (error) {\n          throw error;\n        }\n        return data.session?.access_token;\n      } catch (error) {\n        console.error('Error getting token:', error);\n        return null;\n      }\n    },\n    refreshSession: async () => {\n      try {\n        const { data, error } = await supabase.auth.refreshSession();\n        \n        if (error) {\n          console.error('Session refresh error:', error);\n          return { error };\n        }\n        \n        console.log('Session refreshed successfully');\n        setSession(data.session);\n        setUser(data.user);\n        \n        return { data, error: null };\n      } catch (err) {\n        console.error('Session refresh error:', err);\n        return { error: err };\n      }\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}