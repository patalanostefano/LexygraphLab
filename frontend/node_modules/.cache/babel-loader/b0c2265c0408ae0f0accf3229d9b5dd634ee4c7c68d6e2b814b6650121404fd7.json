{"ast":null,"code":"var _jsxFileName = \"/home/andreadimeglio/valis/src/auth/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/auth/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { supabase } from '../config/supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Verifica la sessione corrente all'avvio\n    const session = supabase.auth.getSession();\n    setUser((session === null || session === void 0 ? void 0 : session.user) || null);\n    setLoading(false);\n\n    // Ascolta i cambiamenti della sessione\n    const {\n      data: authListener\n    } = supabase.auth.onAuthStateChange((event, session) => {\n      setUser((session === null || session === void 0 ? void 0 : session.user) || null);\n    });\n    return () => {\n      authListener === null || authListener === void 0 ? void 0 : authListener.subscription.unsubscribe();\n    };\n  }, []);\n\n  // Funzione per login\n  async function login(email, password) {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n      if (error) throw error;\n      return {\n        success: true,\n        data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Funzione per signup\n  async function signup(email, password) {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.signUp({\n        email,\n        password\n      });\n      if (error) throw error;\n      return {\n        success: true,\n        data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Funzione per logout\n  async function logout() {\n    try {\n      const {\n        error\n      } = await supabase.auth.signOut();\n      if (error) throw error;\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Funzione per recupero password\n  async function resetPassword(email) {\n    try {\n      const {\n        error\n      } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: `${window.location.origin}/reset-password`\n      });\n      if (error) throw error;\n      return {\n        success: true\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Funzione per verificare OTP\n  async function verifyOTP(email, token) {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.verifyOtp({\n        email,\n        token,\n        type: 'signup'\n      });\n      if (error) throw error;\n      return {\n        success: true,\n        data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n\n  // Funzione per OAuth con Google\n  async function signInWithGoogle() {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.signInWithOAuth({\n        provider: 'google',\n        options: {\n          redirectTo: `${window.location.origin}/auth/callback`\n        }\n      });\n      if (error) throw error;\n      return {\n        success: true,\n        data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }\n  const value = {\n    user,\n    loading,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    verifyOTP,\n    signInWithGoogle\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","supabase","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","session","auth","getSession","data","authListener","onAuthStateChange","event","subscription","unsubscribe","login","email","password","error","signInWithPassword","success","message","signup","signUp","logout","signOut","resetPassword","resetPasswordForEmail","redirectTo","window","location","origin","verifyOTP","token","verifyOtp","type","signInWithGoogle","signInWithOAuth","provider","options","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/andreadimeglio/valis/src/auth/AuthContext.js"],"sourcesContent":["// src/auth/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { supabase } from '../config/supabaseClient';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Verifica la sessione corrente all'avvio\n    const session = supabase.auth.getSession();\n    setUser(session?.user || null);\n    setLoading(false);\n\n    // Ascolta i cambiamenti della sessione\n    const { data: authListener } = supabase.auth.onAuthStateChange(\n      (event, session) => {\n        setUser(session?.user || null);\n      }\n    );\n\n    return () => {\n      authListener?.subscription.unsubscribe();\n    };\n  }, []);\n\n  // Funzione per login\n  async function login(email, password) {\n    try {\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n\n      if (error) throw error;\n      return { success: true, data };\n    } catch (error) {\n      return { success: false, error: error.message };\n    }\n  }\n\n  // Funzione per signup\n  async function signup(email, password) {\n    try {\n      const { data, error } = await supabase.auth.signUp({\n        email,\n        password\n      });\n\n      if (error) throw error;\n      return { success: true, data };\n    } catch (error) {\n      return { success: false, error: error.message };\n    }\n  }\n\n  // Funzione per logout\n  async function logout() {\n    try {\n      const { error } = await supabase.auth.signOut();\n      if (error) throw error;\n      return { success: true };\n    } catch (error) {\n      return { success: false, error: error.message };\n    }\n  }\n\n  // Funzione per recupero password\n  async function resetPassword(email) {\n    try {\n      const { error } = await supabase.auth.resetPasswordForEmail(email, {\n        redirectTo: `${window.location.origin}/reset-password`,\n      });\n\n      if (error) throw error;\n      return { success: true };\n    } catch (error) {\n      return { success: false, error: error.message };\n    }\n  }\n\n  // Funzione per verificare OTP\n  async function verifyOTP(email, token) {\n    try {\n      const { data, error } = await supabase.auth.verifyOtp({\n        email,\n        token,\n        type: 'signup'\n      });\n\n      if (error) throw error;\n      return { success: true, data };\n    } catch (error) {\n      return { success: false, error: error.message };\n    }\n  }\n\n  // Funzione per OAuth con Google\n  async function signInWithGoogle() {\n    try {\n      const { data, error } = await supabase.auth.signInWithOAuth({\n        provider: 'google',\n        options: {\n          redirectTo: `${window.location.origin}/auth/callback`\n        }\n      });\n\n      if (error) throw error;\n      return { success: true, data };\n    } catch (error) {\n      return { success: false, error: error.message };\n    }\n  }\n\n  const value = {\n    user,\n    loading,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    verifyOTP,\n    signInWithGoogle\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}