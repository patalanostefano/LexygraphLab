{"ast":null,"code":"var _jsxFileName = \"/home/andreadimeglio/valis/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { supabase } from '../config/supabaseClient';\n\n// Crea il context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\n\n// Hook personalizzato per utilizzare il context\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth deve essere utilizzato all\\'interno di un AuthProvider');\n  }\n  return context;\n};\n\n// Provider per l'autenticazione\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [session, setSession] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Recupera la sessione al caricamento\n    supabase.auth.getSession().then(({\n      data: {\n        session\n      }\n    }) => {\n      setSession(session);\n      setLoading(false);\n    });\n\n    // Sottoscrizione ai cambiamenti dello stato di autenticazione\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n      setLoading(false);\n    });\n\n    // Pulizia alla smontatura del componente\n    return () => subscription.unsubscribe();\n  }, []);\n\n  // Valori forniti dal context\n  const value = {\n    session,\n    user: (session === null || session === void 0 ? void 0 : session.user) || null,\n    loading,\n    isAuthenticated: !!session,\n    signOut: () => supabase.auth.signOut()\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"dkuVYdQvZEJ7aX3whq8i9qrSbuA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","supabase","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","session","setSession","loading","setLoading","auth","getSession","then","data","subscription","onAuthStateChange","_event","unsubscribe","value","user","isAuthenticated","signOut","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/andreadimeglio/valis/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { supabase } from '../config/supabaseClient';\n\n// Crea il context\nexport const AuthContext = createContext(null);\n\n// Hook personalizzato per utilizzare il context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth deve essere utilizzato all\\'interno di un AuthProvider');\n  }\n  return context;\n};\n\n// Provider per l'autenticazione\nexport const AuthProvider = ({ children }) => {\n  const [session, setSession] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Recupera la sessione al caricamento\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setSession(session);\n      setLoading(false);\n    });\n\n    // Sottoscrizione ai cambiamenti dello stato di autenticazione\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\n      (_event, session) => {\n        setSession(session);\n        setLoading(false);\n      }\n    );\n\n    // Pulizia alla smontatura del componente\n    return () => subscription.unsubscribe();\n  }, []);\n\n  // Valori forniti dal context\n  const value = {\n    session,\n    user: session?.user || null,\n    loading,\n    isAuthenticated: !!session,\n    signOut: () => supabase.auth.signOut()\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,QAAQ,QAAQ,0BAA0B;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,IAAI,CAAC;;AAE9C;AACA,OAAO,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGP,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,gEAAgE,CAAC;EACnF;EACA,OAAOD,OAAO;AAChB,CAAC;;AAED;AAAAD,EAAA,CARaD,OAAO;AASpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACAE,QAAQ,CAACe,IAAI,CAACC,UAAU,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MAAEC,IAAI,EAAE;QAAEP;MAAQ;IAAE,CAAC,KAAK;MACzDC,UAAU,CAACD,OAAO,CAAC;MACnBG,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;;IAEF;IACA,MAAM;MAAEI,IAAI,EAAE;QAAEC;MAAa;IAAE,CAAC,GAAGnB,QAAQ,CAACe,IAAI,CAACK,iBAAiB,CAChE,CAACC,MAAM,EAAEV,OAAO,KAAK;MACnBC,UAAU,CAACD,OAAO,CAAC;MACnBG,UAAU,CAAC,KAAK,CAAC;IACnB,CACF,CAAC;;IAED;IACA,OAAO,MAAMK,YAAY,CAACG,WAAW,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,KAAK,GAAG;IACZZ,OAAO;IACPa,IAAI,EAAE,CAAAb,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEa,IAAI,KAAI,IAAI;IAC3BX,OAAO;IACPY,eAAe,EAAE,CAAC,CAACd,OAAO;IAC1Be,OAAO,EAAEA,CAAA,KAAM1B,QAAQ,CAACe,IAAI,CAACW,OAAO,CAAC;EACvC,CAAC;EAED,oBAAOxB,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACJ,KAAK,EAAEA,KAAM;IAAAd,QAAA,EAAEA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACrB,GAAA,CAjCWF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}