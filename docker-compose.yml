version: '3.8'

services:
  # API Gateway (Spring Boot)
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVICES_DOCUMENT_SERVICE_URL=http://document-service:8000
      - SERVICES_EXTRACTION_AGENT_URL=http://extraction-agent:8001
    networks:
      - app-network
    depends_on:
      document-service:
        condition: service_healthy
      extraction-agent:
        condition: service_healthy
    healthcheck:
      test:
        ['CMD', 'wget', '--spider', '-q', 'http://localhost:8080/api/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s

  # Document Service (FastAPI/Python)
  document-service:
    build:
      context: ./document-service
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  # Extraction Agent (FastAPI/Python + Transformers - CPU optimized)
  extraction-agent:
    build:
      context: ./extraction-agent
      dockerfile: Dockerfile
    ports:
      - '8001:8001'
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - DOCUMENT_SERVICE_URL=http://api-gateway:8080
      - TORCH_NUM_THREADS=1
      - OMP_NUM_THREADS=1
    networks:
      - app-network
    depends_on:
      document-service:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8001/health']
      interval: 60s
      timeout: 45s
      retries: 2
      start_period: 180s # Allow time for model loading
    # Optimized resource limits for CPU inference
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Frontend (React/Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '3000:80'
    networks:
      - app-network
    depends_on:
      api-gateway:
        condition: service_healthy
    environment:
      - REACT_APP_API_URL=http://localhost:8080
    volumes:
      # Mount source code with :cached for faster file sync on macOS/Windows
      - ./frontend:/app:cached
      # Prevent mounting node_modules from host to avoid FS slowdown
      - /app/node_modules
    mem_limit: 2g # Give frontend more RAM
    cpus: 2 # Give it 2 CPU cores
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', 'http://localhost:80/']
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge

# Volumes for development (optional)
volumes:
  document-data:
    driver: local
